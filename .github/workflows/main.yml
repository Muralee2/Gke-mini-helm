name: Deploy Microservice to GKE

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  CLUSTER_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}
  STATIC_IP_REGION: ${{ secrets.GKE_STATIC_IP_REGION }}
  STATIC_IP_NAME: ${{ secrets.GKE_STATIC_IP_NAME }}
  RELEASE_NAME: microservice
  NAMESPACE: default

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true

    - name: Install GKE gcloud auth plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin --quiet
        echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials $CLUSTER_NAME \
          --zone $CLUSTER_ZONE \
          --project $PROJECT_ID

    - name: Install NGINX Ingress Controller
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
        echo "Waiting for ingress-nginx-controller deployment to be available..."
        kubectl wait --namespace ingress-nginx \
          --for=condition=available deployment/ingress-nginx-controller \
          --timeout=180s

    - name: Wait for LoadBalancer IP
      id: wait-ip
      run: |
        echo "⏳ Waiting for ingress controller external IP..."
        for i in {1..30}; do
          IP=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          if [ -n "$IP" ]; then
            echo "✅ Ingress controller external IP: $IP"
            echo "INGRESS_IP=$IP" >> $GITHUB_ENV
            echo "::set-output name=INGRESS_IP::$IP"
            break
          fi
          echo "Still waiting for LoadBalancer IP... ($i/30)"
          sleep 10
        done

    - name: Get Static IP Address
      id: get-ip
      run: |
        IP_ADDRESS=$(gcloud compute addresses describe $STATIC_IP_NAME \
          --region $STATIC_IP_REGION \
          --format="value(address)")
        if [ -z "$IP_ADDRESS" ]; then
          echo "❌ ERROR: Static IP not found in region $STATIC_IP_REGION"
          exit 1
        fi
        echo "STATIC_IP=$IP_ADDRESS" >> $GITHUB_ENV
        echo "::set-output name=STATIC_IP::$IP_ADDRESS"
        echo "✅ Using Static IP: $IP_ADDRESS"

    - name: Deploy Microservice via Helm
      run: |
        helm upgrade --install $RELEASE_NAME ./helm/microservice \
          -f ./helm/microservice/values.yaml \
          --namespace $NAMESPACE --create-namespace

